{"version":3,"sources":["../src/Carousel.js","../src/ErrorBoundary.js","../src/ThemeContext.js","../src/Modal.js","../src/Details.js","../src/useBreedList.js","../src/pet.js","../src/result.js","../src/actionCreators/changeTheme.js","../src/SearchParams.js","../src/reducer/location.js","../src/reducer/animal.js","../src/reducer/breed.js","../src/reducer/theme.js","../src/reducer/index.js","../src/store.js","../src/app.js","index.js"],"names":["Carousel","Component","active","event","setState","target","dataset","index","render","state","images","props","map","photo","handleIndexClick","ErrorBoundary","hasError","redirect","getDerivedStateFromError","componentDidCatch","error","info","console","componentDidUpdate","setTimeout","children","ThemeContext","Modal","modalRoot","document","getElementById","elRef","current","createElement","appendChild","removeChild","Details","loading","showModal","window","location","componentDidMount","res","fetch","match","params","id","json","Object","assign","pets","animal","breed","city","description","name","backgroundColor","theme","toggleModal","adopt","DetailWithRouter","DetailsWithErrorBoundary","localCache","useBreedList","breedList","setBreedList","status","setStatus","requestBreedList","breeds","Pet","hero","length","Result","pet","changeTheme","type","payload","changeAnimal","changeBreed","changeLocation","SearchParams","animals","setPets","dispatch","requestPets","handleAnimalChange","e","value","preventDefault","action","store","reducer","__REDUX_DEVTOOLS_EXTENSION__","f","App","background","PORT","process","env","html","fs","readFileSync","toString","parts","split","app","use","express","static","req","write","staticContext","reactMarkup","url","stream","pipe","end","on","log","listen"],"mappings":"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","file":"index.js","sourceRoot":"../server","sourcesContent":["import { Component } from \"react\";\n\nclass Carousel extends Component {\n    state = {\n        active: 0\n    };\n\n    static defaultProps = {\n        images: ['http://pets-images.dev-apis.com/pets/none.jpg']\n    }\n\n    handleIndexClick = (event) => {\n        this.setState({\n            active: +event.target.dataset.index\n        });\n    }\n\n    render() {\n        const { active } = this.state;\n        const { images } = this.props;\n        return (\n            <div className=\"pl-2 py-5 m-5 lg:m-20 flex flex-row justify-items-center align-items-center\" >\n                <div className=\"prof-cropper\">\n                    <img src={images[active]} alt=\"animal\" className=\"main-pic\" />\n                </div>\n                <div className=\"grid gap-2 gap-y-4 sm:grid-cols-2 lg:grid-cols-3 justify-items-center align-items-center px-10\">\n                    {\n                        images.map((photo, index) => (\n                            //eslint-disable-next-line\n                            <div className=\"image-cropper\" >\n                                <img\n                                    //className=\"profile-pic\"\n                                    key={photo}\n                                    src={photo}\n                                    data-index={index}\n                                    onClick={this.handleIndexClick}\n                                    className={index === active ? \"active\" : \"\"}\n                                    alt=\"Animal Thumbnail\"\n                                />\n                            </div>\n                        ))\n                    }\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default Carousel;","import { Component } from \"react\";\nimport { Link , Redirect } from \"react-router-dom\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        hasError:false,\n        redirect : false\n    }\n    static getDerivedStateFromError() {\n        return {hasError:true}\n    }\n    componentDidCatch(error , info) {\n        console.error(\"ErrorBoundary caught error\" , error , info);\n    }\n\n    componentDidUpdate() {\n        if(this.state.hasError) {\n            setTimeout( () => this.setState({redirect:true}) , 5000)\n        }\n    }\n\n    render() {\n        if(this.state.redirect){\n            return <Redirect to = \"/\" />\n        } else if(this.state.hasError){\n            return (\n                <h2>\n                    This listing has an error. <Link to=\"/\">Click here</Link> to go back to Home or wait 5 sec.\n                </h2>\n            )\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import { createContext } from \"react\";\n\nconst ThemeContext = createContext(['black' , () => {}]);\n\nexport default ThemeContext;","import { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nlet modalRoot;\n\nconst Modal = ({ children }) => {\n\n    modalRoot = modalRoot ? modalRoot : document.getElementById(\"modal\");\n\n    const elRef = useRef(null);\n    if (!elRef.current) {\n        elRef.current = document.createElement(\"div\");\n    }\n\n    useEffect(() => {\n        modalRoot.appendChild(elRef.current);\n        return () => modalRoot.removeChild(elRef.current);\n    }, []);\n\n    return createPortal(<div>{children}</div>, elRef.current);\n};\n\nexport default Modal;","import { Component, lazy } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Carousel from \"./Carousel\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport ThemeContext from \"./ThemeContext\";\n\nimport Modal from \"./Modal\";\n\nclass Details extends Component {\n\n    state = { loading: true, showModal: false };\n\n    async componentDidMount() {\n        const res = await fetch(\n            `http://pets-v2.dev-apis.com/pets?id=${this.props.match.params.id}`\n        );\n        const json = await res.json();\n        this.setState(\n            Object.assign({\n                loading: false\n            },\n                json.pets[0]\n            )\n        );\n    }\n\n    toggleModal = () => this.setState({ showModal: !this.state.showModal });\n\n    adopt = () => (window.location = \"http://bit.ly/pet-adopt\");\n    render() {\n        if (this.state.loading) {\n            return <h2>Loading...</h2>\n        }\n\n        const { animal, breed, city, state, description, name, images, showModal } = this.state;\n\n        return (\n            <div className=\"rounded-3xl p-1 m-5 lg:p-5 lg:mx-40 justify-items-center align-items-center block\"\n                style={{ backgroundColor: \"#f2e4e6\" }}>\n                <Carousel images={images} />\n                <div className=\"px-0 mx-0 text-center justify-items-center align-items-center \">\n                    <h1 className=\"font-serif text-6xl\">{name}</h1>\n                    <h2 className=\"mb-5 font-sans text-2xl\">{`${animal} - ${breed} - ${city},${state}`}</h2>\n                    <ThemeContext.Consumer>\n                        {([theme]) => (\n                            <button\n                                className=\"rounded px-6 py-2 text-white hover:opacity-50 border-none\"\n                                onClick={this.toggleModal}\n                                style={{ backgroundColor: theme }}>Adopt {name}</button>\n                        )}\n                    </ThemeContext.Consumer>\n                    <p className=\"p-10 lg:my-50 text-lg\">{description}</p>\n                    {showModal ? (\n                        <Modal>\n                            <div>\n                                <h1>Would you like to adopt {name}?</h1>\n                                <div className=\"p-5\">\n                                    <button className=\"rounded-xl px-6 py-2 m-5 text-white hover:opacity-50 border-none\"\n                                        style={{ backgroundColor: \"red\" }} onClick={this.adopt}>Yes</button>\n                                    <button className=\"rounded-xl px-6 m-5 py-2 text-white hover:opacity-50 border-none\"\n                                        style={{ backgroundColor: \"red\" }} onClick={this.toggleModal}>No</button>\n                                </div>\n                            </div>\n                        </Modal>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst DetailWithRouter = withRouter(Details);\n\nexport default function DetailsWithErrorBoundary() {\n    return (\n        <ErrorBoundary>\n            <DetailWithRouter />\n        </ErrorBoundary>\n    );\n};","import { useState , useEffect } from \"react\";\n\nconst localCache = [];\n\nexport default function useBreedList(animal) {\n    const [breedList , setBreedList] = useState([]);\n    const [status , setStatus] = useState(\"unloaded\");\n\n    useEffect(() => {\n        if(!animal) {\n            setBreedList([]);\n        }\n        else if(localCache[animal]){\n            setBreedList(localCache[animal]);\n        }\n        else{\n            requestBreedList();\n        }\n\n        async function requestBreedList(){\n            setBreedList([]);\n            setStatus(\"loading\");\n    \n            const res = await fetch(\n                `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\n            )\n            const json = await res.json();\n            localCache[animal] = json.breeds || [];\n            setBreedList(localCache[animal]);\n            setStatus('loaded');\n        }\n    },[animal]);\n\n    return [breedList , status];\n}","import { Link } from \"react-router-dom\";\n\nconst Pet = ({\n  name,\n  breed,\n  animal,\n  images,\n  location,\n  id\n}) => {\n  let hero = `http://pets-images.dev-apis.com/pets/none.jpg`;\n  if (images.length) {\n    hero = images[0];\n  }\n  return (\n    <Link to={`/details/${id}`} className=\"relative block\" >\n      <div>\n        <img src={hero} alt={name} />\n      </div>\n      <div className=\"absolute bottom-0 left-0 bg-gradient-to-tr from-black to-transparent pr-2 pt-2 text-blue-300\">\n        <h1>{name}</h1>\n        <h2>{`${animal} - ${breed} - ${location}`}</h2>\n      </div>\n    </Link>\n  );\n};\n\nexport default Pet;\n","import Pet from \"./pet.js\";\n\nconst Result = ({ pets }) => {\n    return (\n        <div className=\"grid gap-4 grid-cols-1 sm:grid-cols-1 lg:grid-cols-3\">\n            {\n                !pets.length ? (\n                    <h2>No Pet found</h2>\n                ) : (\n                    pets.map((pet) => (\n                        <Pet\n                            name={pet.name}\n                            animal={pet.animal}\n                            breed={pet.breed}\n                            images={pet.images}\n                            key={pet.id}\n                            location={`${pet.city},${pet.state}`}\n                            id={pet.id}\n                        />\n                    ))\n                )\n            }\n        </div>\n    )\n}\n\nexport default Result;","export function changeTheme(theme) {\n    return { type: \"CHANGE_THEME\", payload: theme };\n}\n\nexport function changeAnimal(animal) {\n    return { type: \"CHANGE_ANIMAL\", payload: animal };\n}\n\nexport function changeBreed(breed) {\n    return { type: \"CHANGE_BREED\", payload: breed };\n}\n\nexport function changeLocation(location) {\n    return { type: \"CHANGE_LOCATION\", payload: location };\n}","import { useState, useEffect } from \"react\";\nimport useBreedList from \"./useBreedList\";\nimport Result from \"./result\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeTheme, changeAnimal, changeBreed, changeLocation } from \"./actionCreators/changeTheme\";\n\nconst animals = [\"bird\", \"cat\", \"dog\", \"rabbit\"];\n\nconst SearchParams = () => {\n\n    const animal = useSelector(state => state.animal);\n    const location = useSelector(state => state.location);\n    const breed = useSelector(state => state.breed);\n    const theme = useSelector(state => state.theme);\n    const [pets, setPets] = useState([]);\n    const [breeds] = useBreedList(animal);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        requestPets();\n\n    }, []);\n\n    async function requestPets() {\n        const res = await fetch(\n            `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\n        );\n        const json = await res.json();\n\n        setPets(json.pets);\n    }\n\n    function handleAnimalChange(e) {\n        dispatch(changeAnimal(e.target.value));\n        dispatch(changeBreed(\"\"));\n    }\n\n    return (\n        <div\n            className=\"my-0 mx-auto w-5/6 flex flex-row\"\n        >\n            <div>\n                <form\n                    className=\"p-10 mb-10 rounded-3xl shadow-lg flex flex-col justify-center items-center divide-y divide-gray-900\"\n                    style={{ backgroundColor: \"#f2e4e6\" }}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        requestPets();\n                    }\n                    }\n                >\n                    <label className=\"search-label\" htmlFor=\"location\">\n                        Location\n                        <input className=\"search-control\" id=\"location\"\n                            onChange={(e) => dispatch(changeLocation(e.target.value))}\n                            value={location}\n                            placeholder=\"Enter Location\"\n                        />\n                    </label>\n                    <label className=\"search-label\" htmlFor=\"Animal\">\n                        Animal\n                        <select\n                            className=\"search-control\"\n                            id=\"animal\"\n                            value={animal}\n                            onChange={handleAnimalChange}\n                            onBlur={handleAnimalChange}\n\n                        >\n                            <option />\n                            {\n                                animals.map(animal => (\n                                    <option\n                                        value={animal}\n                                        key={animal}\n                                    >\n                                        {animal}\n                                    </option>\n                                ))\n                            }\n                        </select>\n                    </label>\n                    <label className=\"search-label\" htmlFor=\"Breed\">\n                        Breed\n                        <select\n                            className=\"search-control disabled:opacity-50\"\n                            id=\"breed\"\n                            value={breed}\n                            onChange={(e) => dispatch(changeBreed(e.target.value))}\n                            onBlur={(e) => dispatch(changeBreed(e.target.value))}\n                        >\n                            <option />\n                            {\n                                breeds.map(breed => (\n                                    <option\n                                        value={breed}\n                                        key={breed}\n                                    >\n                                        {breed}\n                                    </option>\n                                ))\n                            }\n                        </select>\n                    </label>\n                    <label className=\"search-label\" htmlFor='theme'>\n                        Theme\n                        <select\n                            className=\"search-control\"\n                            value={theme}\n                            onChange={e => dispatch(changeTheme(e.target.value))}\n                            onBlur={e => dispatch(changeTheme(e.target.value))}\n                        >\n                            <option value=\"darkblue\">Dark Blue</option>\n                            <option value=\"purple\">purple</option>\n                            <option value=\"black\">black</option>\n                            <option value=\"peru\">peru</option>\n                            <option value=\"mediumorchid\">mediumorchid</option>\n                            <option value=\"chartreuse\">chartreuse</option>\n\n                        </select>\n                    </label>\n                    <button className=\"rounded px-6 py-2 text-white hover:opacity-50 border-none\" style={{ backgroundColor: theme }}>Submit</button>\n                </form>\n            </div>\n            <div className=\"rounded-3xl p-10 mx-5 justify-items-center align-items-center\" style={{ backgroundColor: \"#f2e4e6\" }}>\n                <Result pets={pets} />\n            </div>\n        </div>\n    );\n};\n\nexport default SearchParams;","export default function location(state = \"Seattle, WA\", action) {\n    switch (action.type) {\n        case \"CHANGE_LOCATION\":\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","export default function animal(state = \"dog\", action) {\n    switch (action.type) {\n        case \"CHANGE_ANIMAL\":\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","export default function breed(state = \"Havanese\", action) {\n    switch (action.type) {\n        case \"CHANGE_BREED\":\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","export default function theme(state = \"darkblue\", action) {\n    switch (action.type) {\n        case \"CHANGE_THEME\":\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport location from \"./location\";\nimport animal from \"./animal\";\nimport breed from \"./breed\";\nimport theme from \"./theme\";\n\nexport default combineReducers({\n    location,\n    animal,\n    breed,\n    theme,\n});","import { createStore } from \"redux\";\nimport reducer from \"./reducer/index\"\n\nconst store = createStore(\n    reducer,\n    typeof window === 'object' &&\n        typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : (f) => f\n);\n\nexport default store;","import ReactDOM from \"react-dom\";\nimport { StrictMode } from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport DetailsWithErrorBoundary from \"./Details\";\nimport SearchParams from \"./SearchParams\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\nconst App = () => {\n\n  return (\n    <StrictMode>\n      <Provider store={store}>\n        <div\n          style={{\n            background: \"url(http://pets-images.dev-apis.com/pets/wallpaperA.jpg)\",\n          }}\n        >\n          <header\n            className=\"w-full mb-10 text-center p-7 bg-gradient-to-b from-purple-400 via-pink-500 to-red-500\"\n          >\n            <Link\n              to=\"/\"\n              className=\"text-6xl text-white hover:text-gray-300\"\n            >\n              <h1>Adopt Me!</h1>\n            </Link>\n          </header>\n          <Switch>\n            <Route path=\"/details/:id\">\n              <DetailsWithErrorBoundary />\n            </Route>\n            <Route path=\"/\">\n              <SearchParams />\n            </Route>\n          </Switch>\n        </div>\n      </Provider>\n    </StrictMode>\n  );\n};\n\nexport default App;\n","import express from \"express\";\nimport { renderToNodeStream } from 'react-dom/server';\nimport { StaticRouter } from \"react-router\";\nimport fs from 'fs';\nimport App from '../src/app.js';\n\nconst PORT = process.env.PORT || 3000;\n\nconst html = fs.readFileSync('dist/index.html').toString();\nconst parts = html.split('Not Rendered');\n\nconst app = express();\n\napp.use(\"/dist\", express.static('dist'));\napp.use((req, res) => {\n    res.write(parts[0]);\n    const staticContext = {};\n    const reactMarkup = (\n        <StaticRouter url={req.url} context={staticContext} >\n            <App />\n        </StaticRouter>\n    );\n\n    const stream = renderToNodeStream(reactMarkup);\n    stream.pipe(res, { end: false });\n    stream.on('end', () => {\n        res.status(staticContext || 200);\n        res.write(parts[1]);\n        res.end();\n    }\n    );\n}\n);\n\nconsole.log(`listening on http://localhost:${PORT}`);\napp.listen(PORT);\n"]}